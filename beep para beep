contract Referral is ReentrancyGuard {
    using SafeMath for uint256;
    struct User {
        address referrer;
        uint8 totalReferrals;
        uint8 level;
        uint256 earnings;
    }

    address public owner;
    mapping(address => User) public users;

    uint256 public constant REGISTRATION_FEE = 0.25 ether;
    uint8 public constant REFERRAL_PERCENTAGE = 70;
    uint8 public constant BONUS_REFERRALS = 2;
    uint8 public constant BONUS_PERCENTAGE = 50;

    constructor() {
        owner = msg.sender;
        // User storage firstUser = users[owner];
        //set the first user as deployer
        users[owner] = User(address(0), 0, 1, 0);
        // firstUser.referrer = address(0);
        // firstUser.totalReferrals = 0;
        // firstUser.level = 1;
        // firstUser.earnings = 0;
    }

    modifier validRegistration(address _referrer) {
        require(
            msg.value == REGISTRATION_FEE,
            "Registration fee is 0.25 ether"
        );
        require(
            users[msg.sender].referrer == address(0),
            "User already registered"
        );
        require(
            _referrer != address(0) && _referrer != msg.sender,
            "Invalid referrer"
        );
        if (_referrer != owner) {
            require(
                users[_referrer].referrer != address(0),
                "Referrer does not exist"
            );
        }
        require(
            users[_referrer].referrer != msg.sender,
            "Referrer cannot be the sender"
        );

        //require that the referrer has referrer less than 9 people
        require(
            users[_referrer].totalReferrals < 9,
            "Referrer has already referred 9 people"
        );
        //require that the referrer is less than 10 levels
        require(users[_referrer].level < 10, "Referrer is already at level 10");
        _;
    }

    function register(
        address _referrer
    ) public payable validRegistration(_referrer) {
        User storage newUser = users[msg.sender];
        newUser.referrer = _referrer;
        newUser.totalReferrals = 0;
        newUser.level = 1;

        // console.log("User registered: %s", msg.sender);
        // console.log("Referrer: %s", _referrer);
        // console.log(msg.value);

        transferPayment(_referrer, msg.value);
        updateReferralCount(_referrer);
